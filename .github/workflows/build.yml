name: Build Multi-Platform Packages

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    name: Build for ${{ matrix.platform }}
    runs-on: ${{ matrix.os }}
    
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: 'windows'
            os: 'windows-latest'
            target: 'x86_64-pc-windows-msvc'
            extension: '.msi'
          - platform: 'macos'
            os: 'macos-latest'
            target: 'x86_64-apple-darwin'
            extension: '.dmg'
          - platform: 'linux'
            os: 'ubuntu-latest'
            target: 'x86_64-unknown-linux-gnu'
            extension: '.deb'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Setup Rust (Linux/macOS)
        if: matrix.platform != 'windows'
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Setup Rust (Windows)
        if: matrix.platform == 'windows'
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Install Linux dependencies
        if: matrix.platform == 'linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libwebkit2gtk-4.0-dev \
            build-essential \
            curl \
            wget \
            libssl-dev \
            libgtk-3-dev \
            libayatana-appindicator3-dev \
            librsvg2-dev

      - name: Install Node.js dependencies
        run: npm ci

      - name: Build TypeScript
        run: npm run build

      - name: Build Tauri application
        run: npm run tauri:build -- --target ${{ matrix.target }}

      - name: Upload artifacts (Windows)
        if: matrix.platform == 'windows'
        uses: actions/upload-artifact@v4
        with:
          name: app-${{ matrix.platform }}
          path: |
            src-tauri/target/${{ matrix.target }}/release/bundle/msi/*.msi
            src-tauri/target/${{ matrix.target }}/release/bundle/nsis/*.exe

      - name: Upload artifacts (macOS)
        if: matrix.platform == 'macos'
        uses: actions/upload-artifact@v4
        with:
          name: app-${{ matrix.platform }}
          path: |
            src-tauri/target/${{ matrix.target }}/release/bundle/dmg/*.dmg
            src-tauri/target/${{ matrix.target }}/release/bundle/macos/*.app

      - name: Upload artifacts (Linux)
        if: matrix.platform == 'linux'
        uses: actions/upload-artifact@v4
        with:
          name: app-${{ matrix.platform }}
          path: |
            src-tauri/target/${{ matrix.target }}/release/bundle/deb/*.deb
            src-tauri/target/${{ matrix.target }}/release/bundle/appimage/*.AppImage

  release:
    name: Create Release
    if: startsWith(github.ref, 'refs/tags/v')
    needs: build
    runs-on: ubuntu-latest
    
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Display structure of downloaded files
        run: ls -R artifacts

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            artifacts/app-windows/*.msi
            artifacts/app-windows/*.exe
            artifacts/app-macos/*.dmg
            artifacts/app-linux/*.deb
            artifacts/app-linux/*.AppImage
          draft: false
          prerelease: false
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}